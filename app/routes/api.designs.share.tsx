import type { ActionFunctionArgs } from "@remix-run/node";
import { json } from "@remix-run/node";
import db from "../db.server";

export async function action({ request }: ActionFunctionArgs) {
  if (request.method !== "POST") {
    return json({ error: "Method not allowed" }, { status: 405 });
  }

  try {
    const formData = await request.formData();
    const designId = formData.get("designId") as string;
    const isPublic = formData.get("isPublic") === "true";
    
    // Get shop from header
    const shop = request.headers.get("x-shopify-shop-domain") || 
                 formData.get("shop") as string;

    if (!shop || !designId) {
      return json({ error: "Missing required fields" }, { status: 400 });
    }

    // Verify design exists and belongs to shop
    const design = await db.customerDesign.findFirst({
      where: {
        id: designId,
        shop,
      },
    });

    if (!design) {
      return json({ error: "Design not found" }, { status: 404 });
    }

    // Update design with share settings
    const updatedDesign = await db.customerDesign.update({
      where: { id: designId },
      data: {
        isPublic,
        // shareToken is already generated by default
      },
    });

    // Generate share URL
    const shareUrl = `https://${shop}/apps/designer/share/${updatedDesign.shareToken}`;

    return json({
      success: true,
      shareUrl,
      shareToken: updatedDesign.shareToken,
      isPublic: updatedDesign.isPublic,
    });
  } catch (error) {
    console.error("Error generating share link:", error);
    return json(
      { error: "Failed to generate share link" },
      { status: 500 }
    );
  }
}