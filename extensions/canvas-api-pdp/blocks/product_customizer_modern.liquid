{% comment %}
  Product Customizer Block for Modern Themes
  This block integrates with the new Horizons 2025 themes
{% endcomment %}

{% if product.selected_or_first_available_variant.metafields.custom_designer.template_id %}
  <div class="product-customizer-wrapper" data-product-customizer>
    <button 
      id="customize-product-btn" 
      class="product-customizer-button button button--secondary"
      data-variant-id="{{ product.selected_or_first_available_variant.id }}"
      data-template-id="{{ product.selected_or_first_available_variant.metafields.custom_designer.template_id }}"
    >
      <svg width="20" height="20" viewBox="0 0 20 20" fill="currentColor" class="icon icon--edit">
        <path d="M13.586 3.586a2 2 0 112.828 2.828l-.793.793-2.828-2.828.793-.793zM11.379 5.793L3 14.172V17h2.828l8.38-8.379-2.83-2.828z"/>
      </svg>
      {{ block.settings.button_text | default: 'Customize This Product' }}
    </button>
  </div>

  {% comment %} Load customizer modal script (Konva will be loaded on demand) {% endcomment %}
  <script src="{{ 'canvas-text-renderer.js' | asset_url }}" defer></script>
  <script src="{{ 'product-customizer-modal.js' | asset_url }}" defer></script>
  
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const customizeBtn = document.getElementById('customize-product-btn');
      if (!customizeBtn) return;
      
      // Get the variant's featured image if available
      let productImageUrl = null;
      {% if product.selected_or_first_available_variant.featured_image %}
        productImageUrl = '{{ product.selected_or_first_available_variant.featured_image | image_url: width: 1000 }}';
      {% elsif product.featured_image %}
        productImageUrl = '{{ product.featured_image | image_url: width: 1000 }}';
      {% endif %}
      
      // Wait for modal script to load
      function initializeWhenReady() {
        if (typeof ProductCustomizerModal === 'undefined') {
          setTimeout(initializeWhenReady, 100);
          return;
        }
        
        // Initialize customizer modal
        const customizer = new ProductCustomizerModal({
          variantId: customizeBtn.dataset.variantId,
          templateId: customizeBtn.dataset.templateId,
          apiUrl: '/apps/designer',
          productImageUrl: productImageUrl,
          useModernTheme: true, // Flag for modern theme support
          onSave: function(customization) {
            // Add customization to cart
            const formData = {
              id: customization.variantId,
              quantity: 1,
              properties: {
                '_customization_id': Date.now().toString(),
                '_template_id': customization.templateId,
                '_custom_preview': customization.preview,
                ...Object.entries(customization.textUpdates).reduce((acc, [key, value]) => {
                  acc[`Text: ${key}`] = value;
                  return acc;
                }, {})
              }
            };
            
            // Add to cart via Shopify AJAX API
            fetch('/cart/add.js', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
              },
              body: JSON.stringify(formData)
            })
            .then(response => response.json())
            .then(data => {
              // Trigger cart update event for modern themes
              document.dispatchEvent(new CustomEvent('cart:updated', { detail: data }));
              
              // Show success notification or redirect based on settings
              if ('{{ block.settings.redirect_to_cart }}' === 'true') {
                window.location.href = '/cart';
              } else {
                // Trigger theme's cart drawer if available
                const cartDrawerOpen = new CustomEvent('cart:open');
                document.dispatchEvent(cartDrawerOpen);
              }
            })
            .catch(error => {
              console.error('Error adding to cart:', error);
              alert('{{ block.settings.error_message | default: "Failed to add customized product to cart. Please try again." }}');
            });
          }
        });
        
        customizer.init();
        
        // Open modal on button click
        customizeBtn.addEventListener('click', function(e) {
          e.preventDefault();
          customizer.open();
        });
      }
      
      initializeWhenReady();
    });
  </script>

  <style>
    .product-customizer-wrapper {
      margin-top: 1rem;
    }
    
    .product-customizer-button {
      width: 100%;
      justify-content: center;
    }
    
    .product-customizer-button .icon {
      margin-right: 0.5rem;
    }
  </style>
{% endif %}

{% schema %}
{
  "name": "Product Customizer",
  "target": "section",
  "enabled_on": {
    "templates": ["product"]
  },
  "settings": [
    {
      "type": "text",
      "id": "button_text",
      "label": "Button Text",
      "default": "Customize This Product"
    },
    {
      "type": "checkbox",
      "id": "redirect_to_cart",
      "label": "Redirect to cart after adding",
      "default": false
    },
    {
      "type": "text",
      "id": "error_message",
      "label": "Error Message",
      "default": "Failed to add customized product to cart. Please try again."
    }
  ]
}
{% endschema %}